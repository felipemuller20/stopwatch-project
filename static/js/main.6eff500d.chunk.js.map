{"version":3,"sources":["components/Clock.jsx","images/gato.gif","App.js","reportWebVitals.js","index.js"],"names":["Clock","this","props","name","value","onChange","max","type","min","React","Component","App","bind","startCount","stopCount","plusOne","plusFive","plusTen","resetCount","halfSecond","lessHalfSecond","state","minutes","seconds","working","setState","previous","_prop","clearInterval","myInterval","alert","event","target","parseInt","setInterval","_props","className","onClick","id","src","gatoImg","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eff500d.chunk.js","sourcesContent":["import React from 'react';\n\nclass Clock extends React.Component {\n  render() {\n    const { name, value, onChange, max } = this.props;\n    return (\n      <div>\n        <input type='number' name={name} value={value} onChange={onChange} max={max} min='0' />\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","export default __webpack_public_path__ + \"static/media/gato.9f4017ba.gif\";","import React from 'react';\nimport Clock from './components/Clock';\nimport './App.css'\nimport gatoImg from './images/gato.gif';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.onChange = this.onChange.bind(this);\n    this.startCount = this.startCount.bind(this);\n    this.stopCount = this.stopCount.bind(this);\n    this.plusOne = this.plusOne.bind(this);\n    this.plusFive = this.plusFive.bind(this);\n    this.plusTen = this.plusTen.bind(this);\n    this.resetCount = this.resetCount.bind(this);\n    this.halfSecond = this.halfSecond.bind(this);\n    this.lessHalfSecond = this.lessHalfSecond.bind(this);\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n      working: false,\n    };\n  }\n\n  componentDidUpdate() {\n    const { minutes, seconds, working } = this.state;\n    if (minutes > 99 && working === false) {\n      this.setState({ minutes: 99})\n    }\n    if (seconds > 60 && working === false) {\n      this.setState({ seconds: 60})\n    }\n    if(seconds === 0 && minutes > 0 && working === true) {\n      this.setState((previous, _prop) => ({ minutes: previous.minutes - 1, seconds: 60 }))\n    }\n    if (seconds === 0 && minutes === 0 && working === true) {\n      clearInterval(this.myInterval)\n      this.setState({ working: false, alert: true });\n      alert('FIM DO INTERVALO! #VQV')\n    }\n  }\n\n  onChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: parseInt(value, 10)});\n  }\n\n  startCount() {\n    const { working } = this.state;\n    if (working === false) {\n      this.setState({ working: true });\n      this.myInterval = setInterval(() => this.setState((previous, _prop) => ({ seconds: previous.seconds - 1 })), 1000);\n    }\n  }\n\n  stopCount() {\n    this.setState({ working: false });\n    clearInterval(this.myInterval);\n  }\n\n  plusOne() {\n    this.setState((previous, _props) => ({ minutes: previous.minutes + 1 }));\n  }\n\n  plusFive() {\n    this.setState((previous, _props) => ({ minutes: previous.minutes + 5 }));\n  }\n\n  plusTen() {\n    this.setState((previous, _props) => ({ minutes: previous.minutes + 10 }));\n  }\n\n  resetCount() {\n    const { working } = this.state;\n    if (working) {\n      clearInterval(this.myInterval);\n      this.setState({ minutes: 0, seconds: 0, working: false })\n    }\n    if(!working) this.setState({ minutes: 0, seconds: 0, working: false })\n  }\n\n  halfSecond() {\n    const { seconds } = this.state;\n    if (seconds === 60) {\n      this.setState((previous, _props) => ({ minutes: previous.minutes + 1, seconds: 30 }));\n    } else if (seconds + 30 <= 60) {\n      this.setState((previous, _props) => ({ seconds: previous.seconds + 30 }))\n    } else {\n      this.setState((previous, _props) => ({ minutes: previous.minutes + 1, seconds: previous.seconds - 30}))\n    }\n  }\n\n  lessHalfSecond() {\n    const { seconds, minutes } = this.state;\n    if (seconds === 30) {\n      this.setState({ seconds: 0 })\n    } else if (seconds - 30 > 0) {\n      this.setState((previous, _props) => ({ seconds: previous.seconds - 30 }))\n    } else if(seconds - 30 < 0 && minutes === 0) {\n      this.setState({ minutes: 0, seconds: 0});\n    } else {\n      this.setState((previous, _props) => ({ minutes: previous.minutes - 1, seconds: previous.seconds + 30}))\n    }\n  }\n\n  render() {\n    const { minutes, seconds } = this.state;\n    return (\n      <div>\n        <header>\n          <h1>StopWatch</h1>\n          <h2>\n            Digite ou pressione os botões\n          </h2>\n        </header>\n        <main>\n          <div className='clock-container'>\n          <Clock name='minutes' value={minutes} onChange={this.onChange} max='99' /> \n          <span>:</span>\n          <Clock name='seconds' value={seconds} onChange={this.onChange} max='60' />\n          </div>\n          <div className='main-buttons-container'>\n            <button type='button' onClick={this.startCount} id='start'>COMEÇAR!</button>\n            <button type='button' onClick={this.stopCount} id='stop'>PARAR!</button>\n            <button type='button' onClick={this.resetCount} id='reset'>ZERAR</button>\n          </div>\n          <div className='minutes-buttons-container'>\n            <button type='button' onClick={this.plusOne}>+ 1min</button>\n            <button type='button' onClick={this.plusFive}>+ 5min</button>\n            <button type='button' onClick={this.plusTen}>+ 10min</button>\n          </div>\n          <div className='seconds-buttons-container'>\n          <button type='button' onClick={this.halfSecond}>+ 30seg</button>\n          <button type='button' onClick={this.lessHalfSecond}>- 30seg</button>\n          </div>\n          <div>\n            <img src={gatoImg} alt=\"Gif do relogato\" className=\"cat-img\" />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}